# The Caddyfile is an easy way to configure your Caddy web server.
#
# Unless the file starts with a global options block, the first
# uncommented line is always the address of your site.
#
# To use your own domain name (with automatic HTTPS), first make
# sure your domain's A/AAAA DNS records are properly pointed to
# this machine's public IP, then replace ":80" below with your
# domain name.

:3000 {

  log

  header /public/* Access-Control-Allow-Origin "*"

  file_server /public/* {
    root /home/ubuntu/web
    browse
  }

  @api_rpc_options {
    path_regexp api ^/rpc/(.*)$
    method OPTIONS
  }

  route @api_rpc_options {
    header Connection "keep-alive"
    header Access-Control-Allow-Origin "*"
    header Access-Control-Allow-Methods "POST, GET, PUT, OPTIONS, DELETE"
    header Access-Control-Max-Age "86400"
    header Access-Control-Allow-Headers "*"
    respond "" 204
  }

  @api_rpc {
    path_regexp api ^/rpc/(.*)$
  }

  route @api_rpc {
    reverse_proxy 127.0.0.1:1234 {
      header_down Access-Control-Allow-Origin "*"
    }
  }

  @api_rest_options {
      path_regexp api ^/rest/(.*)$
      method OPTIONS
  }

  route @api_rest_options {
    header Connection "keep-alive"
    header Access-Control-Allow-Origin "*"
    header Access-Control-Allow-Methods "POST, GET, PUT, OPTIONS, DELETE"
    header Access-Control-Max-Age "86400"
    header Access-Control-Allow-Headers "*"
    respond "" 204
  }

  @api_rest {
    path_regexp api ^/rest/(.*)$
  }

  route @api_rest {
    reverse_proxy 127.0.0.1:1234 {
      header_down Access-Control-Allow-Origin "*"
    }
  }

  route /compile {
    reverse_proxy 127.0.0.1:4000
  }

  route /upload {
    reverse_proxy 127.0.0.1:4000
  }

}

# Refer to the Caddy docs for more information:
# https://caddyserver.com/docs/caddyfile
